ОБЪЕКТЫ

используются для хранения коллекций различных значений и более сложных сущностей.
Объект может быть создан с помощью фигурных скобок {...} с необязательным списком СВОЙСТВ.

СВОЙСТВО - это пара <ключ: значение>, где ключ - это строка(также называемая именем свойства), а значение можеть быть чем угодно.

Пустой объект можно создать используя один из двух вариантов синтаксиса:

let user = new Object() //синтаксис "конструктор объекта"
let user = {} //синтаксис "литерал объекта"

обычно используется вариант с фигурными скобками. ТАКОЕ ОБЪЯВЛЕНИЕ НАЗЫВАЮТ ЛИТЕРАЛОМ ОБЪЕКТА ИЛИ ЛИТЕРАЛЬНОЙ НОТАЦИЕЙ.

ЛИТЕРАЛЫ И СВОЙСТВА

ПРи использовании литерального синтаксиса {...} мы сразу можем поместить в объект несколько свойств в виде пар <ключ: значение>

let user = { //объект
  name: "John", // под ключом 'name' хранится значение 'John'
  age : 30 // под сключем 'age' хранится значение 30
}

Для обращения к свойствам используется запись <через точку>:

//получаем св-ва объекта:
alert( user.name) // Johm
alert( user.age) // 30

Значение может быть любого типа. 
user.isAdmin = true;

Для удаления св-ва мы можем использовать оператор delete:
delete user.age;

Имя св-ва может состоять из нескольких слов, но тогда оно должно быть заключено в кавычки:

let user = {
  name: "John",
  age: 30,
  "likes birds": true // имя св-ва из  нескольких слов должно быть в кавычках
}

Последнее св-во объекта может заканчиваться запятой:
let user = {
  name: "John",
  age: 30,
}
Это называется ВИСЯЧАЯ ЗАПЯТАЯ.(Упрощает добавление, удаление и перемещение свойств, так как все строки объекта становятся одинаковыми)

ОБЪЕКТ,ОБЪЯВЛЕННЫЙ КАК КОНСТАНТА,МОЖЕТ БЫТЬ ИЗМЕНЕН

Напрммер:

const user = {
  name: "John"
}

user.name = "Pete"

alert(user.name) //Pete

Объявление const защищает от изменений только саму переменную user, а не ее содержимое.

КВАДРАТНЫЕ СКОБКИ

Для св-в, имена которых состоят из нескольких слов, доступ к значению <через точку> не работает

user.likes birds = true //Работать не будет